# JEFES DE HOGAR
##############################################
data_migracion %>%
count(demo3) # Hay 8603 personas que reportan ser jefes de hogar
data_migracion %>%
filter(!is.na(demo3) & demo3 != "") %>%
count(demo5) # Todas las personas que no son jefes de hogar dicen poder
# Responder por los miembros del hogar, coincide con                     # hogares sin jefes de hogar
# Identificar hogares sin jefes de hogar
data_migracion <- data_migracion %>%
group_by(id_hogar) %>%
mutate(no_tiene_jefe = as.integer(all(demo3 != "si" | is.na(demo3)))) %>%
ungroup()
data_migracion %>%
distinct(id_hogar, intro5, no_tiene_jefe) %>%
group_by(intro5) %>%
summarise(
hogares_sin_jefe = sum(no_tiene_jefe),
hogares_total = n(),
porcentaje_sin_jefe = round(100 * hogares_sin_jefe / hogares_total, 1)
) %>%
arrange(desc(hogares_sin_jefe)) # Resumen por ciudad
# Contar quién se puede reasignar cómo jefe de hogar.
resumen_por_ciudad <- data_migracion %>%
filter(no_tiene_jefe == 1) %>%
group_by(intro5, id_hogar) %>%
summarise(
Puede_responder_por_el_hogar = any(demo5 == "si", na.rm = TRUE),
Total_sí = sum(demo5 == "si", na.rm = TRUE),
Total_miembros_promedio_por_hogar = n(),                                  # número de personas en ese hogar
.groups = "drop"
) %>%
group_by(intro5) %>%
summarise(
hogares_sin_jefe = n(),
hogares_con_al_menos_un_sí = sum(Puede_responder_por_el_hogar),
promedio_sí_por_hogar = round(mean(Total_sí), 2),
miembros_promedio = round(mean(Total_miembros_promedio_por_hogar), 2),    # promedio de miembros por hogar
.groups = "drop"
) %>%
arrange(desc(hogares_sin_jefe)) # En todos los hogares sin jefe de hogar
# los miembros reportan que pueden responder                                   # por el resto. Por lo que se asigna                                          # aleatoriamente a cualquier integrante
# cómo jefe de hogar.
resumen_por_ciudad
rm(resumen_por_ciudad)
# Asignar un jefe de hogar
data_migracion <- data_migracion %>%
group_by(id_hogar) %>%
mutate(
demo3 = ifelse(no_tiene_jefe == 1 & row_number() == 1, "si", demo3)
) %>%
ungroup()
##############################################
# INTENCIÓN DE MOVERSE
##############################################
intencion_moverse <- data_migracion %>%
pivot_longer(
cols = c(demo21_ing_red,
demo21_suf_disc,
demo21_aum_prec,
demo21_desal_viv,
demo21_no_alim,
demo21_no_acces_sal,
demo21_of_lab,
demo21_acc_edu,
demo21_acc_edu_nna,
demo21_otro_inten),
names_to = "variable",
values_to = "valor"
) %>%
group_by(intro5, variable) %>%
summarise(n_1 = sum(valor == 1, na.rm = TRUE), .groups = "drop") %>%
arrange(intro5, variable)
rm(intencion_moverse)
# Moverse por Falta de ingresos
data_migracion <- data_migracion %>%
group_by(id_hogar) %>%
mutate(
carencia_ingresos = as.integer(any(
demo21_ing_red == 1 | demo21_aum_prec == 1 | demo21_of_lab == 1,
na.rm = TRUE
))
) %>% ungroup()
# Moverse por carencias de servicios (incluye educación y alimentación)
data_migracion <- data_migracion %>%
group_by(id_hogar) %>%
mutate(
carencia_servicios = as.integer(any(
demo21_desal_viv == 1 | demo21_no_alim == 1 |
demo21_no_acces_sal == 1| demo21_acc_edu == 1|
demo21_acc_edu_nna ==1),
na.rm = TRUE
)) %>% ungroup()
# Moverse por discriminación (incluye desalojo)
data_migracion <- data_migracion %>%
group_by(id_hogar) %>%
mutate(
discriminacion = as.integer(any(
demo21_suf_disc == 1 | demo21_desal_viv == 1),
na.rm = TRUE
)) %>% ungroup()
# Moverse por otras causas
##############################################
# AÑOS
##############################################
data_migracion <- data_migracion %>%
mutate(
fecha_demo8 = ymd(demo8),   # convertir string a fecha
meses_transcurridos = interval(fecha_demo8, today()) %/% months(1),
anios_en_Col = meses_transcurridos / 12
)
#########################################
# MIGRAR EN PRÓXIMOS 6 MESES
#########################################
data_migracion <- data_migracion %>%
mutate(
`6M_sinmov`      = ifelse(demo22 == "no tienen la intencion de moverse", 1, 0),
`6M_Mudar_barrio`= ifelse(demo22 == "si, nos vamos a mudar de barrio al interior de esta ciudad", 1, 0),
`6M_Depto`       = ifelse(demo22 == "si, nos vamos a cambiar a otro departamento al interior de colombia", 1, 0),
`6M_Venezuela`   = ifelse(demo22 == "si, irnos a venezuela", 1, 0),
`6M_OtroPais`    = ifelse(demo22 == "si, irnos a otro pais (diferente a venezuela)", 1, 0),
`6M_MismoDpto`   = ifelse(demo22 == "si, nos vamos a cambiar de municipio pero en el mismo departamento actual", 1, 0)
)
#########################################
# HACE CUÁNTO TIEMPO RESIDE EN EL HOGAR
#########################################
data_migracion <- data_migracion %>%
mutate(
meses_en_lugar = case_when(
demo12a %in% c("no sabe", "prefiere no responder") ~ NA_character_,
demo12a == "menos de 1 mes" ~ "<1",
demo12a == "entre 1 mes y menos de 6 meses" ~ "1-6",
demo12a == "entre 6 meses y menos de 1 ano" ~ "6-12",
demo12a == "entre 1 ano y menos de 2 anos" ~ "12-24",
demo12a == "entre 2 y menos de 3 anos" ~ "24-36",
demo12a == "entre 3 y 10 anos" ~ "36-120",
demo12a == "mas de 10 anos" ~ ">120",
TRUE ~ NA_character_
),
meses_en_lugar = factor(
meses_en_lugar,
levels = c("<1", "1-6", "6-12", "12-24", "24-36", "36-120", ">120"),
ordered = TRUE
)
#########################################
# RAZÓN POR LA QUE MIGRÓ A RESIDENCIA ACTUAL
#########################################
data_migracion <- data_migracion %>%
mutate(
Migro_por_violencia = ifelse(demo17 %in% c(
"la persona o alguien cercano fue victima
de violencia (extorsion, agresiones, etc.) o amenazas",
"temor por la situacion general de violencia / inseguridad"), 1, 0),
Migro_por_familia = ifelse(demo17 %in% c(
"acompanar a otros miembros del hogar",
"reunificacion familiar"), 1, 0),
Migro_por_discriminacion = ifelse(demo17 %in% c(
"salud mental o fisica",
"temor de ser perseguido/a, agredido/a o discriminado/a"), 1, 0),
Migro_por_trabajo = ifelse(demo17 == "trabajo", 1, 0),
Migro_por_educacion = ifelse(demo17 == "educacion", 1, 0),
Migro_por_des_natural = ifelse(demo17 == "desastres naturales", 1, 0),
Migro_por_alimentos = ifelse(demo17 == "alimentos", 1, 0)
)
#########################################
# ACCESO A AGUA
#########################################
data_migracion <- data_migracion %>%
group_by(id_hogar) %>%
mutate(
Acueducto_casa = as.integer(any(wash1 == "agua de tuberia por grifo", na.rm = TRUE)),
AguaPublica_fueradecasa = as.integer(any(
wash1 %in% c("perforaciones / pozos tubulares (publicos)",
"pilas o fuentes publicas (fuentes publicas)"),
na.rm = TRUE
)),
Agua_FuentesNaturales = as.integer(any(
wash1 %in% c("agua de lluvia",
"agua superficial (rio, quebrada, manantial, lago)"),
na.rm = TRUE
)),
Agua_FuentesPrivadas = as.integer(any(
wash1 %in% c("agua envasada, agua embotellada y agua en bolsitas",
"de pozo sin bomba, aljibe, jaguey o barreno; (no protegido)",
"suministro de agua, incluidos camiones cisterna y carros / tanques / tambores pequenos"),
na.rm = TRUE
)),
Agua_NoAcceso = as.integer(any(wash1 == "no tiene acceso", na.rm = TRUE))
) %>%
ungroup()
#########################################
# AGUA EN VIVIENDA
#########################################
data_migracion <- data_migracion %>%
group_by(id_hogar) %>%
mutate(
Acceso_agua_casa = as.integer(any(wash01 == "si", na.rm = TRUE)),
No_Acceso_agua_casa = as.integer(any(wash01 == "no", na.rm = TRUE)),
Acceso_agua_casa_Otro = as.integer(any(wash01 %in% c("no sabe", "prefiere no responder"), na.rm = TRUE))
) %>%
ungroup()
#########################################
# TIEMPO PARA AGUA
#########################################
data_migracion <- data_migracion %>%
group_by(id_hogar) %>%
mutate(
Agua_caminar_largo = as.integer(any(wash3 == "mas de 30 minutos", na.rm = TRUE)),
Agua_caminar_corto = as.integer(any(wash3 == "menos de 30 minutos", na.rm = TRUE))
) %>%
ungroup()
#########################################
# SATISFACCIÓN NECESIDADES BÁSICAS AGUA
#########################################
data_migracion <- data_migracion %>%
mutate(
Agua_Satisfaccion = case_when(
wash5 == "si" ~ 1L,
wash5 == "no" ~ 0L,
TRUE ~ NA_integer_
)
#########################################
# TIEMPO DE COBERTURA DEL SERVICIO
#########################################
data_migracion <- data_migracion %>%
mutate(
Agua_CoberturaTotal = ifelse(
wash6 == "las 24 horas del dia, los 7 dias de la semana", 1L, 0L
),
Agua_CoberturaMedia = ifelse(
wash6 %in% c("llega a diario pero solo a ciertas horas del
dia/en horarios restringidos",
"las 24 horas de 4 a 6 dias a la semana"), 1L, 0L
),
Agua_MalaCobertura = ifelse(
wash6 %in% c("las 24 horas 1 a 2 dias a la semana",
"las 24 horas 3 dias a la semana"), 1L, 0L
)
#########################################
# INFORMACIÓN SANEAMIENTO
#########################################
data_migracion <- data_migracion %>%
group_by(id_hogar) %>%
mutate(
# Calidad
Saneamiento_deCalidad = as.integer(any(
wash11 %in% c("inodoro conectado a alcantarillado",
"inodoro conectado a pozo septico"),
na.rm = TRUE
)),
# No calidad
Saneamiento_noCalidad = as.integer(any(
wash11 %in% c("letrinas colgantes o inodoro con descarga directa a fuentes de agua (bajamar)",
"inodoro sin conexion (banos portatiles)",
"defecacion al aire libre",
"letrina de pozo con losa y plataforma",
"no tiene servicio sanitario, pero tiene un lugar gratuito y seguro",
"no tiene servicio sanitario y tiene que pagar el servicio",
"letrina improvisada"),
na.rm = TRUE
)),
# Letrinas
Saneamiento_Letrina = as.integer(any(
wash11 %in% c("letrinas colgantes o inodoro con descarga directa a fuentes de agua (bajamar)",
"inodoro sin conexion (banos portatiles)",
"letrina de pozo con losa y plataforma",
"letrina improvisada"),
na.rm = TRUE
)),
# Privado
Saneamiento_Privado = as.integer(any(
wash11 == "no tiene servicio sanitario y tiene que pagar el servicio",
na.rm = TRUE
)),
# Uso público
Saneamiento_UsoPublico = as.integer(any(
wash11 %in% c("no tiene servicio sanitario, pero tiene un lugar gratuito y seguro",
"inodoro sin conexion (banos portatiles)"),
na.rm = TRUE
)),
# Sin cobertura
Saneamiento_SinCobertura = as.integer(any(
wash11 %in% c("defecacion al aire libre",
"no tiene servicio sanitario, pero tiene un lugar gratuito y seguro",
"no tiene servicio sanitario y tiene que pagar el servicio"),
na.rm = TRUE
))
) %>%
ungroup()
#########################################
# SERVICIO DE BASURA
#########################################
data_migracion <- data_migracion %>%
group_by(id_hogar) %>%
mutate(
Servicio_basuraPublico = as.integer(any(
wash17 == "camion de basura municipal/punto de acopio formal",
na.rm = TRUE
)),
Servicio_basuraPrivado = as.integer(any(
wash17 == "servicio informal (punto de acopio no autorizado, recicladores/cartoneros)",
na.rm = TRUE
)),
Servicio_Nobasura = as.integer(any(
wash17 %in% c("no sabe",
"la tiran en la calle, via publica y/o rio",
"la queman o entierran"),
na.rm = TRUE
))) %>%
ungroup()
#########################################
# AMBIENTE CONTAMINADO
#########################################
data_migracion <- data_migracion %>%
group_by(id_hogar) %>%
mutate(
AmbienteContaminado = as.integer(any(
wash17 %in% c("la tiran en la calle, via publica y/o rio",
"la queman o entierran") |
wash11 %in% c("defecacion al aire libre",
"letrinas colgantes o inodoro con descarga directa a fuentes de agua (bajamar)"),
na.rm = TRUE
))
) %>%
ungroup()
#########################################
# PRBLEMAS PARA ACCEDER A ARTÍCULOS DE HIGIENE
#########################################
data_migracion <- data_migracion %>%
mutate(
wash20 = factor(
wash20,
levels = c("no (falta de jabon, lavamanos con agua)",
"si",
"utilizo gel antibacterial / toallas humedas / alcohol"),
labels = c("No (falta de jabón/agua)", "Sí", "Gel/Toallas/Alcohol"),
ordered = TRUE
)
#########################################
# ACCESO A AGUA
#########################################
data_migracion <- data_migracion %>%
group_by(id_hogar) %>%
mutate(
Acueducto_casa = as.integer(any(wash1 == "agua de tuberia por grifo", na.rm = TRUE)),
AguaPublica_fueradecasa = as.integer(any(
wash1 %in% c("perforaciones / pozos tubulares (publicos)",
"pilas o fuentes publicas (fuentes publicas)"),
na.rm = TRUE
)),
Agua_FuentesNaturales = as.integer(any(
wash1 %in% c("agua de lluvia",
"agua superficial (rio, quebrada, manantial, lago)"),
na.rm = TRUE
)),
Agua_FuentesPrivadas = as.integer(any(
wash1 %in% c("agua envasada, agua embotellada y agua en bolsitas",
"de pozo sin bomba, aljibe, jaguey o barreno; (no protegido)",
"suministro de agua, incluidos camiones cisterna y carros / tanques / tambores pequenos"),
na.rm = TRUE
)),
Agua_NoAcceso = as.integer(any(wash1 == "no tiene acceso", na.rm = TRUE))
) %>%
ungroup()
#########################################
# AGUA EN VIVIENDA
#########################################
data_migracion <- data_migracion %>%
group_by(id_hogar) %>%
mutate(
Acceso_agua_casa = as.integer(any(wash01 == "si", na.rm = TRUE)),
No_Acceso_agua_casa = as.integer(any(wash01 == "no", na.rm = TRUE)),
Acceso_agua_casa_Otro = as.integer(any(wash01 %in% c("no sabe", "prefiere no responder"), na.rm = TRUE))
) %>%
ungroup()
#########################################
# TIEMPO PARA AGUA
#########################################
data_migracion <- data_migracion %>%
group_by(id_hogar) %>%
mutate(
Agua_caminar_largo = as.integer(any(wash3 == "mas de 30 minutos", na.rm = TRUE)),
Agua_caminar_corto = as.integer(any(wash3 == "menos de 30 minutos", na.rm = TRUE))
) %>%
ungroup()
#########################################
# SATISFACCIÓN NECESIDADES BÁSICAS AGUA
#########################################
data_migracion <- data_migracion %>%
mutate(
Agua_Satisfaccion = case_when(
wash5 == "si" ~ 1L,
wash5 == "no" ~ 0L,
TRUE ~ NA_integer_
)
#########################################
# TIEMPO DE COBERTURA DEL SERVICIO
#########################################
data_migracion <- data_migracion %>%
mutate(
Agua_CoberturaTotal = ifelse(
wash6 == "las 24 horas del dia, los 7 dias de la semana", 1L, 0L
),
Agua_CoberturaMedia = ifelse(
wash6 %in% c("llega a diario pero solo a ciertas horas del
dia/en horarios restringidos",
"las 24 horas de 4 a 6 dias a la semana"), 1L, 0L
),
Agua_MalaCobertura = ifelse(
wash6 %in% c("las 24 horas 1 a 2 dias a la semana",
"las 24 horas 3 dias a la semana"), 1L, 0L
)
#########################################
# INFORMACIÓN SANEAMIENTO
#########################################
data_migracion <- data_migracion %>%
group_by(id_hogar) %>%
mutate(
# Calidad
Saneamiento_deCalidad = as.integer(any(
wash11 %in% c("inodoro conectado a alcantarillado",
"inodoro conectado a pozo septico"),
na.rm = TRUE
)),
# No calidad
Saneamiento_noCalidad = as.integer(any(
wash11 %in% c("letrinas colgantes o inodoro con descarga directa a fuentes de agua (bajamar)",
"inodoro sin conexion (banos portatiles)",
"defecacion al aire libre",
"letrina de pozo con losa y plataforma",
"no tiene servicio sanitario, pero tiene un lugar gratuito y seguro",
"no tiene servicio sanitario y tiene que pagar el servicio",
"letrina improvisada"),
na.rm = TRUE
)),
# Letrinas
Saneamiento_Letrina = as.integer(any(
wash11 %in% c("letrinas colgantes o inodoro con descarga directa a fuentes de agua (bajamar)",
"inodoro sin conexion (banos portatiles)",
"letrina de pozo con losa y plataforma",
"letrina improvisada"),
na.rm = TRUE
)),
# Privado
Saneamiento_Privado = as.integer(any(
wash11 == "no tiene servicio sanitario y tiene que pagar el servicio",
na.rm = TRUE
)),
# Uso público
Saneamiento_UsoPublico = as.integer(any(
wash11 %in% c("no tiene servicio sanitario, pero tiene un lugar gratuito y seguro",
"inodoro sin conexion (banos portatiles)"),
na.rm = TRUE
)),
# Sin cobertura
Saneamiento_SinCobertura = as.integer(any(
wash11 %in% c("defecacion al aire libre",
"no tiene servicio sanitario, pero tiene un lugar gratuito y seguro",
"no tiene servicio sanitario y tiene que pagar el servicio"),
na.rm = TRUE
))
) %>%
ungroup()
#########################################
# SERVICIO DE BASURA
#########################################
data_migracion <- data_migracion %>%
group_by(id_hogar) %>%
mutate(
Servicio_basuraPublico = as.integer(any(
wash17 == "camion de basura municipal/punto de acopio formal",
na.rm = TRUE
)),
Servicio_basuraPrivado = as.integer(any(
wash17 == "servicio informal (punto de acopio no autorizado, recicladores/cartoneros)",
na.rm = TRUE
)),
Servicio_Nobasura = as.integer(any(
wash17 %in% c("no sabe",
"la tiran en la calle, via publica y/o rio",
"la queman o entierran"),
na.rm = TRUE
))) %>%
ungroup()
#########################################
# AMBIENTE CONTAMINADO
#########################################
data_migracion <- data_migracion %>%
group_by(id_hogar) %>%
mutate(
AmbienteContaminado = as.integer(any(
wash17 %in% c("la tiran en la calle, via publica y/o rio",
"la queman o entierran") |
wash11 %in% c("defecacion al aire libre",
"letrinas colgantes o inodoro con descarga directa a fuentes de agua (bajamar)"),
na.rm = TRUE
))
) %>%
ungroup()
#########################################
# PRBLEMAS PARA ACCEDER A ARTÍCULOS DE HIGIENE
#########################################
data_migracion <- data_migracion %>%
mutate(
wash20 = factor(
wash20,
levels = c("no (falta de jabon, lavamanos con agua)",
"si",
"utilizo gel antibacterial / toallas humedas / alcohol"),
labels = c("No (falta de jabón/agua)", "Sí", "Gel/Toallas/Alcohol"),
ordered = TRUE
)
